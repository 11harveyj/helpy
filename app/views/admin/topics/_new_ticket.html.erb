<div class="add-form">
<%= simple_form_for(@topic, url: admin_topics_path, remote: true, validate: true, multipart: true, authenticity_token: true, html: { class: 'form-vertical new-ticket-loader', method: 'post' }) do |f| -%>
  <div class="channel-wrapper">
    <div><label class="control-label"> <%= t(:channel_source, default: 'Source') %> </label></div>
    <%= f.collection_radio_buttons :channel, [['email', t('activerecord.attributes.user.email')],['phone', t('activerecord.attributes.user.home_phone')],['person', t(:channel_in_person, default: 'In Person')]], :first, :last, selected: 'email', item_label_class: 'radio-label', item_wrapper_class: 'radio-inline channel-item', item_wrapper_tag: :div, class: 'channel-toggle' %>
  </div>
  <%= f.input :name, :size => 40, class: 'disable-empty', autofocus: true -%>

  <%= f.simple_fields_for @user do |u| %>
    <%= u.input :name, class: 'disable-empty' %>
    <%= u.input :home_phone, class: 'disable-empty', label: "Phone" %>
    <%= u.input :email, class: 'disable-empty', label: "Email (#{link_to 'generate temporary', '#', class: 'generate-temp'})".html_safe %>
  <% end %>

  <% if teams = admin_teams %>
    <%= f.input(:team_list, collection: teams, :label => t(:assign_to), locale: I18n.locale, prompt: "", style: "display:none;") if teams? and teams.count > 0 %>
  <% end %>
  <%= f.simple_fields_for @topic.posts.new do |i| %>
    <%#= i.input :body, input_html: { rows: 8, cols: 60, class: 'disable-empty form-control' }, label: false, validate: { presence: true } -%>
    <%= i.input :body, as: :summernote, label: false, class: 'disable-empty' %>
    <% if !cloudinary_enabled? %>
      <%= i.file_field :attachments, multiple: true %>
      <ul class="list-inline" id="attachments">
      </ul>
    <% end %>
  <% end %>
  <%= hidden_field_tag :client_id %>
  <div class="add-screenshots">
  <%= attachinary_file_field_tag 'topic[screenshots]', @topic, :screenshots if cloudinary_enabled? %>
  </div>
  <%= f.input :tag_list %>
  <%= f.button :submit, t(:submit_start_discussion, default: 'Start Discussion'), class: 'btn btn-warning disableable' %>
<% end -%>
</div>

<script>
$('[data-provider="summernote"]').each(function(){
  $(this).summernote({
    height: 150,
    prettifyHtml: true,
    toolbar: [
      ['style', ['bold', 'italic', 'underline', 'clear']]
    ],
    codemirror: {
      theme: 'monokai',
      mode: "htmlmixed",
      tabsize: 2,
      smartIndent: true,
      lineNumbers: true,
      lineWrapping: true,
      tabMode: 'indent'
    },
    hint: {
      match: /:([\-+\w]+)$/,
      search: function (keyword, callback) {
        callback($.grep(emojis, function (item) {
          return item.indexOf(keyword)  === 0;
        }));
      },
      template: function (item) {
        var content = emojiUrls[item];
        return '<img src="' + content + '" width="20" /> :' + item + ':';
      },
      content: function (item) {
        var url = emojiUrls[item];
        if (url) {
          return $('<img />').attr('src', url).css('width', 20)[0];
        }
        return '';
      }
    }
  });
});
$.ajax({
  url: 'https://api.github.com/emojis',
  async: false
}).then(function(data) {
  window.emojis = Object.keys(data);
  window.emojiUrls = data;
});
</script>
